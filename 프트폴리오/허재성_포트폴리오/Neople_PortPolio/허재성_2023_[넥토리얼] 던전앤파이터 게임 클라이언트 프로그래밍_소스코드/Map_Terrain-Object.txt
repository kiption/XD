
CHeightMapTerrain::CHeightMapTerrain(ID3D12Device* pd3dDevice, ID3D12GraphicsCommandList* pd3dCommandList, ID3D12RootSignature* pd3dGraphicsRootSignature, LPCTSTR pFileName,
	int nWidth, int nLength, int nBlockWidth, int nBlockLength, XMFLOAT3 xmf3Scale, XMFLOAT4 xmf4Color) : CTerrainObject(0)
{
	
	m_nWidth = nWidth;
	m_nLength = nLength;

	int cxQuadsPerBlock = nBlockWidth - 1;
	int czQuadsPerBlock = nBlockLength - 1;

	m_xmf3Scale = xmf3Scale;
 
	m_pHeightMapImage = new CHeightMapImage(pFileName, nWidth, nLength, xmf3Scale);

	long cxBlocks = (m_nWidth - 1) / cxQuadsPerBlock;
	long czBlocks = (m_nLength - 1) / czQuadsPerBlock;

	m_nMeshes = cxBlocks * czBlocks;
	m_ppMeshes = new CMesh * [m_nMeshes];

	for (int i = 0; i < m_nMeshes; i++) m_ppMeshes[i] = NULL;

	CHeightMapGridMesh* pHeightMapGridMesh = NULL;

	for (int z = 0, zStart = 0; z < czBlocks; z++)
	{
		for (int x = 0, xStart = 0; x < cxBlocks; x++)
		{
			xStart = x * (nBlockWidth - 1);
			zStart = z * (nBlockLength - 1);
			pHeightMapGridMesh = new CHeightMapGridMesh(pd3dDevice, pd3dCommandList, xStart, zStart, nBlockWidth, nBlockLength, xmf3Scale, xmf4Color, m_pHeightMapImage);
			SetMesh(x + (z * cxBlocks), pHeightMapGridMesh);
		}
	}

	m_Boobb = BoundingOrientedBox(XMFLOAT3(GetPosition().x, GetPosition().y+50.0, GetPosition().z), XMFLOAT3(8000.0, 10.0, 8000.0), XMFLOAT4(0.0, 0.0, 0.0, 1.0));
}

void CScene::BuildObjects(ID3D12Device* pd3dDevice, ID3D12GraphicsCommandList* pd3dCommandList)
{
	...
[#1-지형]
	CTerrainShader* pTerrainShader = new CTerrainShader();
	pTerrainShader->CreateShader(pd3dDevice, pd3dCommandList, m_pd3dGraphicsRootSignature);
	CMaterialColors* pMaterialColors = new CMaterialColors();
	pMaterialColors->m_xmf4Ambient = XMFLOAT4(0.1f, 0.2f, 0.1f, 0.5f);
	pMaterialColors->m_xmf4Diffuse = XMFLOAT4(0.15f, 0.45f, 0.05f, 1.0f);
	pMaterialColors->m_xmf4Specular = XMFLOAT4(0.0f, 0.0f, 0.0f, 1.0f);
	pMaterialColors->m_xmf4Emissive = XMFLOAT4(0.2f, 0.5f, 0.2f, 1.0f);
	CMaterial* pMaterial = new CMaterial();
	pMaterial->SetShader(pTerrainShader);
	pMaterial->SetMaterialColors(pMaterialColors);
	XMFLOAT3 xmf3Scale(5.0f, 4.0f, 5.0f);
	XMFLOAT3 xmf3Pos(0.0f, 5.0f, 0.0f);
	XMFLOAT4 xmf4Color(0.0f, 0.2f, 0.0f, 0.0f);
	m_pTerrain = new CHeightMapTerrain(pd3dDevice, pd3dCommandList, m_pd3dGraphicsRootSignature, _T("Assets/Image/Terrain/SquareMap.raw"), 513, 513, 16, 16, xmf3Scale, xmf4Color);
	m_pTerrain->SetPosition(xmf3Pos);
	m_pTerrain->SetMaterial(pMaterial);

	...

[#2-방향 지시기]
	CGameObjcet* pArrowModel = CGameObjcet::LoadGeometryFromFile(pd3dDevice, pd3dCommandList, m_pd3dGraphicsRootSignature, "Model/Arrow5.bin");
	CObstacleObject* pArrow = NULL;
	for(int i = 14; i < 17; i++) {
		pArrow = new CObstacleObject();
		pArrow->SetChild(pArrowModel, true);
		pArrow->OnInitialize();
		pArrow->SetScale(3.0f, 3.0f, 3.0f);
		pArrow->SetPosition(305.0f, 25.0f, 2400.0f);
		pArrow->Rotate(0.0f, 180.0f, 0.0f);
		m_ppGameObjects[i] = pArrow;
	}

[#3-나무]
	CGameObjcet* pMiddleLineModel = CGameObjcet::LoadGeometryFromFile(pd3dDevice, pd3dCommandList, m_pd3dGraphicsRootSignature, "Model/Tree.bin");
	CObstacleObject* pTree = NULL;
	for (int i = 18; i < 188; i++) {
		pTree = new CObstacleObject();
		pTree->SetChild(pMiddleLineModel, true);
		pTree->SetScale(3.0f, 10.0f, 3.0f);
		m_ppGameObjects[i] = pTree;
	}

[#4-출발선]
	CGameObjcet* pStartModel = CGameObjcet::LoadGeometryFromFile(pd3dDevice, pd3dCommandList, m_pd3dGraphicsRootSignature, "Model/startline.bin");
	CObstacleObject* pStart = NULL;
	pStart = new CObstacleObject();
	pStart->SetChild(pStartModel, true);
	pStart->OnInitialize();
	pStart->SetScale(20.0, 15.0, 5.0);
	pStart->SetPosition(250.0f, 10.0f, 1200.0f);
	pStart->Rotate(0.0f, 0.0f, 0.0f);
	m_ppGameObjects[188] = pStart;

[#5-미사일]
	CGameObjcet* pMissileModel = CGameObjcet::LoadGeometryFromFile(pd3dDevice, pd3dCommandList, m_pd3dGraphicsRootSignature, "Model/Roket.bin");
	CObstacleObject* pMissile = NULL;
	for(int i = 189; i < 289; i++) {
		pMissile = new CObstacleObject();
		pMissile->OnInitialize();
		pMissile->SetChild(pMissileModel, true);
		pMissile->SetScale(30.0f, 30.0f, 30.0f);
		m_ppGameObjects[i] = pMissile;
		
	}

[#6-트랩]
	CGameObjcet* pTrapModel = CGameObjcet::LoadGeometryFromFile(pd3dDevice, pd3dCommandList, m_pd3dGraphicsRootSignature, "Model/tnt.bin");
	CObstacleObject* pTrap = NULL;
	for (int i = 289; i < 389; i++) {
		pTrap = new CObstacleObject();
		pTrap->OnInitialize();
		pTrap->SetChild(pTrapModel, true);
		pTrap->SetScale(0.1f, 0.1f, 0.1f);
		m_ppGameObjects[i] = pTrap;

	}
	...
}