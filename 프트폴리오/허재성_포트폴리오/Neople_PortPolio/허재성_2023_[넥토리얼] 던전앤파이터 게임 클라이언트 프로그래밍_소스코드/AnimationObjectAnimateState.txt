
[Player 상태 동작 - 죽는 모션]
void CHumanPlayer::DyingMotion()
{
	if (m_bDieState == true)
	{
		m_pSkinnedAnimationController->m_pAnimationTracks->m_nType= ANIMATION_TYPE_ONCE;
		for (int i = 0; i < ANIMATIONTRACTS_HUMANPLAYER; i++) {
			m_pSkinnedAnimationController->SetTrackEnable(8, true);
			if (i != 8)m_pSkinnedAnimationController->SetTrackEnable(i, false);
		}
		m_pSkinnedAnimationController->SetTrackAnimationSet(0, 8);
	}

}
[Player 상태 동작 - 장전 모션]
void CHumanPlayer::ReloadState()
{
	if (m_bReloadState == true)
	{
		for (int i = 0; i < ANIMATIONTRACTS_HUMANPLAYER; i++) {
			m_pSkinnedAnimationController->SetTrackEnable(5, true);
			if (i != 5)m_pSkinnedAnimationController->SetTrackEnable(i, false);
		}
		m_pSkinnedAnimationController->SetTrackAnimationSet(0, 5);
		m_pSkinnedAnimationController->SetTrackSpeed(5,0.8f);
	}
}
[Player 상태 동작 - 사격 모션]
void CHumanPlayer::ShotState(float EleapsedTime, XMFLOAT4X4* pxmf4x4Parent)
{
	for (int i = 0; i < ANIMATIONTRACTS_HUMANPLAYER; i++) {
		m_pSkinnedAnimationController->SetTrackEnable(6, true);
		if (i != 6)m_pSkinnedAnimationController->SetTrackEnable(i, false);
	}
	m_pSkinnedAnimationController->SetTrackAnimationSet(0, 6);

	PlayerMgr::Animate(EleapsedTime, pxmf4x4Parent);
}
[Player 상태 동작 - 이동 모션]
void CHumanPlayer::Move(DWORD dwDirection, float fDistance, bool bUpdateVelocity, XMFLOAT3 slideVec)
{
	m_bReloadState = false;
	m_bDieState = false;
	m_bMoveUpdate = true;
	m_pSkinnedAnimationController->m_pAnimationTracks->m_nType = ANIMATION_TYPE_LOOP;
	if (dwDirection & DIR_FORWARD)
	{
		for (int i = 0; i < ANIMATIONTRACTS_HUMANPLAYER; i++) {
			m_pSkinnedAnimationController->SetTrackEnable(1, true);
			if (i != 1)m_pSkinnedAnimationController->SetTrackEnable(i, false);
		}
	}
	if ((dwDirection & DIR_RIGHT)|| (dwDirection & DIR_LEFT) || (dwDirection & DIR_BACKWARD))
	{
		for (int i = 0; i < ANIMATIONTRACTS_HUMANPLAYER; i++) {
			m_pSkinnedAnimationController->SetTrackEnable(3, true);
			if (i != 3)m_pSkinnedAnimationController->SetTrackEnable(i, false);
		}
	}

	PlayerMgr::Move(dwDirection, fDistance, bUpdateVelocity, slideVec);
}
[Player 상태 동작 - IDLE 상태 업데이트]
void CHumanPlayer::Update(float fTimeElapsed)
{

	PlayerMgr::Update(fTimeElapsed);
	if (m_pSkinnedAnimationController)
	{
		float fLength = sqrtf(m_xmf3Velocity.x * m_xmf3Velocity.x + m_xmf3Velocity.z * m_xmf3Velocity.z);
		if (::IsZero(fLength))
		{
			m_bMoveUpdate = false;
			for (int i = 0; i < ANIMATIONTRACTS_HUMANPLAYER; i++) {
				m_pSkinnedAnimationController->SetTrackEnable(0, true);
				if (i != 0)m_pSkinnedAnimationController->SetTrackEnable(i, false);
			}
			m_pSkinnedAnimationController->SetTrackPosition(1, 0.0f);
		}
	}

}

[NPC 상태 동작 - 걷기 모션]
void CSoldiarNpcObjects::Move(float EleapsedTime)
{

	for (int i = 0; i < ANIMATIONTRACTS_NPCPLAYER; i++) {
		m_pSkinnedAnimationController->SetTrackEnable(1, true);
		if (i != 1)m_pSkinnedAnimationController->SetTrackEnable(i, false);
	}
	m_pSkinnedAnimationController->SetTrackAnimationSet(0, 1);
	GameObjectMgr::Animate(EleapsedTime);
}
[NPC 상태 동작 - 사망 모션]
void CSoldiarNpcObjects::DyingMotion(float EleapsedTime)
{
	for (int i = 0; i < ANIMATIONTRACTS_NPCPLAYER; i++) {
		m_pSkinnedAnimationController->SetTrackEnable(4, true);
		if (i != 4)m_pSkinnedAnimationController->SetTrackEnable(i, false);
	}
	m_pSkinnedAnimationController->SetTrackAnimationSet(0, 4);
	GameObjectMgr::Animate(EleapsedTime);
}
[NPC 상태 동작 - 사격 모션]
void CSoldiarNpcObjects::ShotState(float EleapsedTime)
{
	for (int i = 0; i < ANIMATIONTRACTS_NPCPLAYER; i++) {
		m_pSkinnedAnimationController->SetTrackEnable(2, true);
		if (i != 2)m_pSkinnedAnimationController->SetTrackEnable(i, false);
	}
	m_pSkinnedAnimationController->SetTrackAnimationSet(0, 2);
	GameObjectMgr::Animate(EleapsedTime);
}
[NPC 상태 동작 - IDLE]
void CSoldiarNpcObjects::IdleState(float EleapsedTime)
{
	for (int i = 0; i < ANIMATIONTRACTS_NPCPLAYER; i++) {
		m_pSkinnedAnimationController->SetTrackEnable(0, true);
		if (i != 0)m_pSkinnedAnimationController->SetTrackEnable(i, false);
	}
	m_pSkinnedAnimationController->SetTrackAnimationSet(0, 0);

	GameObjectMgr::Animate(EleapsedTime);
}